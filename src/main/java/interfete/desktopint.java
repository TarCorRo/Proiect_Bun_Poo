/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfete;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import com.mycompany.magazinelectronice.Device;
import com.mycompany.magazinelectronice.Desktopuri;
import fileactions.DesktopFileActions;
import java.awt.*;
import java.util.ArrayList;
import java.util.Arrays;
import newpackage.*;

/**
 *
 * @author Razvan
 */
public class desktopint extends javax.swing.JFrame {
    Instances inst = new Instances();
    DesktopFileActions desktopFileActions = new DesktopFileActions();
    
    Device[] desk = inst.getInstancesArray("desktopuri");
    Desktopuri[] desktopuri = (Desktopuri[]) desk;

    /**
     * Creates new form desktopint
     */
    public desktopint() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
        initializareComboBox();
        jButton1.setVisible(false);
        adaugaActionListenerComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new java.awt.Button();
        titlu = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        home = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        back.setBackground(new java.awt.Color(255, 51, 102));
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        back.setLabel("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        titlu.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        titlu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlu.setText("Desktop");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apasati pentru a vedea desktopuri" }));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Editare detalii Desktop");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        menu.setText("Home");

        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        menu.add(home);

        jMenuBar1.add(menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(titlu, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, 300, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titlu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.setVisible(false);
   
        InterfataGraficaMagazinElectronice home = new InterfataGraficaMagazinElectronice();
        home.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        this.setVisible(false);
   
        InterfataGraficaMagazinElectronice home = new InterfataGraficaMagazinElectronice();
        home.setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedIndex = jComboBox1.getSelectedIndex();
        JFrame popup = new JFrame("Detalii Desktop");
        popup.setSize(1000, 900);
        popup.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(0, 2));
        Desktopuri selectedDesktop = desktopuri[selectedIndex];
    
    if (selectedIndex >= 0 && selectedIndex < desktopuri.length) {
        JTextField textFieldMarca = new JTextField(selectedDesktop.getMarca());
        JTextField textFieldModel = new JTextField(selectedDesktop.getModel());
        JTextField textFieldCantitate = new JTextField(String.valueOf(selectedDesktop.getCantitate()));
        JTextField textFieldAnAparitie = new JTextField(String.valueOf(selectedDesktop.getAnAparitie()));
        JTextField textFieldPret = new JTextField(String.valueOf(selectedDesktop.getPret()));
        JTextField textFieldProcesor = new JTextField(selectedDesktop.getProcesor());
        JTextField textFieldCuloare = new JTextField(selectedDesktop.getCuloare());
        JTextField textFieldFrecventaRam = new JTextField(selectedDesktop.getFrecventaRam());
        JTextField textFieldSistemDeOperare = new JTextField(selectedDesktop.getSistemDeOperare());
        JTextField textFieldTipPlacaVideo = new JTextField(selectedDesktop.getTipPlacaVideo());
        JTextField textFieldModelPlacaVideo = new JTextField(selectedDesktop.getModelPlacaVideo());
        JTextField textFieldTipPorturi = new JTextField(selectedDesktop.getTipPorturi());
        JTextField textFieldNrPorturi = new JTextField(String.valueOf(selectedDesktop.getNrPorturi()));
        JTextField textFieldMemorieRam = new JTextField(String.valueOf(selectedDesktop.getMemorieRam()));
        JTextField textFieldGreutate = new JTextField(String.valueOf(selectedDesktop.getGreutate()));
    
        addLabelAndTextField(panel, "Marca:", textFieldMarca);
        addLabelAndTextField(panel, "Model:", textFieldModel);
        addLabelAndTextField(panel, "Cantitate:", textFieldCantitate);
        addLabelAndTextField(panel, "An aparitie:", textFieldAnAparitie);
        addLabelAndTextField(panel, "Pret:", textFieldPret);
        addLabelAndTextField(panel, "Procesor:", textFieldProcesor);
        addLabelAndTextField(panel, "Culoare:", textFieldCuloare);
        addLabelAndTextField(panel, "Frecventa ram:", textFieldFrecventaRam);
        addLabelAndTextField(panel, "Sistem de operare:", textFieldSistemDeOperare);
        addLabelAndTextField(panel, "Tip placa video:", textFieldTipPlacaVideo);
        addLabelAndTextField(panel, "Model placa video:", textFieldModelPlacaVideo);
        addLabelAndTextField(panel, "Tip porturi:", textFieldTipPorturi);
        addLabelAndTextField(panel, "Nr porturi:", textFieldNrPorturi);
        addLabelAndTextField(panel, "Memorie RAM:", textFieldMemorieRam); 
        addLabelAndTextField(panel, "Greutate:", textFieldGreutate);    
        JButton saveButton = new JButton("Salvează");

        saveButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
              String valoareMarca = textFieldMarca.getText();
              String valoareModel = textFieldModel.getText();
              int valoareCantitate =Integer.parseInt (textFieldCantitate.getText());
              int valoareAnAparitie = Integer.parseInt (textFieldAnAparitie.getText());
              float valoarePret = Float.parseFloat(textFieldPret.getText());
              String valoareProcesor = textFieldProcesor.getText();
              String valoareCuloare = textFieldCuloare.getText();
              String valoareFrecventaRam = textFieldFrecventaRam.getText();
              String valoareSistemDeOperare = textFieldSistemDeOperare.getText();
              String valoareTipPlacaVideo = textFieldTipPlacaVideo.getText();
              String valoareModelPlacaVideo = textFieldModelPlacaVideo.getText();
              String valoareTipPorturi = textFieldTipPorturi.getText();
              int valoareNrPorturi = Integer.parseInt(textFieldNrPorturi.getText());
              int valoareMemorieRAM = Integer.parseInt(textFieldMemorieRam.getText());
              float greutate = Float.parseFloat(textFieldGreutate.getText());
              
              selectedDesktop.setMarca(valoareMarca);
              selectedDesktop.setModel(valoareModel);
              selectedDesktop.setCantitate(valoareCantitate);
              selectedDesktop.setAnAparitie(valoareAnAparitie);
              selectedDesktop.setPret(valoarePret);              
              selectedDesktop.setProcesor(valoareProcesor);
              selectedDesktop.setCuloare(valoareCuloare);
              selectedDesktop.setFrecventaRam(valoareFrecventaRam);
              selectedDesktop.setSistemDeOperare(valoareSistemDeOperare);
              selectedDesktop.setTipPlacaVideo(valoareTipPlacaVideo);
              selectedDesktop.setModelPlacaVideo(valoareModelPlacaVideo);
              selectedDesktop.setTipPorturi(valoareTipPorturi);
              selectedDesktop.setNrPorturi(valoareNrPorturi);
              selectedDesktop.setMemorieRam(valoareMemorieRAM);
              selectedDesktop.setGreutate(greutate);
              desktopuri[selectedIndex].setMarca(selectedDesktop.getMarca());
              JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(saveButton);
              frame.dispose();
              updateTextAreaWithSelectedDesktop(selectedDesktop);
            }
        });
        panel.add(saveButton);
    }
        
        popup.add(panel);
        popup.setVisible(true);     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JDialog dialog = new JDialog(this, "Cautare", true);
        dialog.setLayout(new GridLayout(25, 0, 25, 5));
        jComboBox1.setSelectedIndex(0);

        JTextField textFieldMarca = new JTextField();
        JTextField textFieldModel = new JTextField();
        JTextField textFieldCantitate = new JTextField();
        JTextField textFieldAnAparitie = new JTextField();
        JTextField textFieldPret = new JTextField();
        JTextField textFieldProcesor = new JTextField();
        JTextField textFieldCuloare = new JTextField();
        JTextField textFieldFrecventaRam = new JTextField();
        JTextField textFieldSistemDeOperare = new JTextField();
        JTextField textFieldTipPlacaVideo = new JTextField();
        JTextField textFieldModelPlacaVideo = new JTextField();
        JTextField textFieldTipPorturi = new JTextField();
        JTextField textFieldNrPorturi = new JTextField();
        JTextField textFieldMemorieRam = new JTextField();
        JTextField textFieldGreutate = new JTextField();
    
        addLabelAndTextField(dialog, "Marca:", textFieldMarca);
        addLabelAndTextField(dialog, "Model:", textFieldModel);
        addLabelAndTextField(dialog, "Cantitate:", textFieldCantitate);
        addLabelAndTextField(dialog, "An aparitie:", textFieldAnAparitie);
        addLabelAndTextField(dialog, "Pret:", textFieldPret);
        
        addLabelAndTextField(dialog, "Procesor:", textFieldProcesor);
        addLabelAndTextField(dialog, "Culoare:", textFieldCuloare);
        addLabelAndTextField(dialog, "Frecventa ram:", textFieldFrecventaRam);
        addLabelAndTextField(dialog, "Sistem de operare:", textFieldSistemDeOperare);
        addLabelAndTextField(dialog, "Tip placa video:", textFieldTipPlacaVideo);
        addLabelAndTextField(dialog, "Model placa video:", textFieldModelPlacaVideo);
        addLabelAndTextField(dialog, "Tip porturi:", textFieldTipPorturi);
        addLabelAndTextField(dialog, "Nr porturi:", textFieldNrPorturi);
        addLabelAndTextField(dialog, "Memorie RAM:", textFieldMemorieRam);    
        addLabelAndTextField(dialog, "Greutate:", textFieldGreutate);

        StringBuilder resultBuilder = new StringBuilder();

        JButton searchButton = new JButton("Cauta");
        searchButton.addActionListener(event -> {
            String marca = textFieldMarca.getText().trim();
            String model = textFieldModel.getText().trim();
            String cantitateText = textFieldCantitate.getText().trim();
            String anAparitieText = textFieldAnAparitie.getText().trim();
            String pretText = textFieldPret.getText().trim();
            
            String procesor = textFieldProcesor.getText().trim();
            String culoare = textFieldCuloare.getText().trim();
            String frecventaRam = textFieldFrecventaRam.getText().trim();
            String sistemDeOperare = textFieldSistemDeOperare.getText().trim();
            String tipPlacaVideo = textFieldTipPlacaVideo.getText().trim();
            String modelPlacaVideo = textFieldModelPlacaVideo.getText().trim();
            String tipPorturi = textFieldTipPorturi.getText().trim();
            String nrPorturi = textFieldNrPorturi.getText().trim();
            String memorieRAM = textFieldMemorieRam.getText().trim();
            String greutate = textFieldGreutate.getText().trim();

            java.util.List<Desktopuri> foundDevices = new ArrayList<>();
            boolean emptyTextFields = false;
            
            if (marca.isEmpty() && model.isEmpty() 
                && cantitateText.isEmpty() && anAparitieText.isEmpty() 
                && pretText.isEmpty() && procesor.isEmpty()
                && culoare.isEmpty() && tipPorturi.isEmpty() 
                && frecventaRam.isEmpty() && sistemDeOperare.isEmpty()
                && tipPlacaVideo.isEmpty() && modelPlacaVideo.isEmpty()
                && nrPorturi.isEmpty() && memorieRAM.isEmpty()
                    && greutate.isEmpty()) {
                    emptyTextFields = true;
            }
            
            if(emptyTextFields) {
                foundDevices.addAll(Arrays.asList(desktopuri));
            } else {
                for (Desktopuri instance : desktopuri) {
                    boolean match = true;
                    
                    if (!marca.isEmpty() && !instance.getMarca().equals(marca)
                        || !model.isEmpty() && !instance.getModel().equals(model)
                        || !cantitateText.isEmpty() && instance.getCantitate() != Integer.parseInt(cantitateText)
                        || !anAparitieText.isEmpty() && instance.getAnAparitie() != Integer.parseInt(anAparitieText)
                        || !pretText.isEmpty() && instance.getPret() != Float.parseFloat(pretText)
                        || !procesor.isEmpty() && !instance.getProcesor().equals(procesor)
                        || !culoare.isEmpty() && !instance.getCuloare().equals(culoare)
                        || !frecventaRam.isEmpty() && !instance.getFrecventaRam().equals(frecventaRam)
                        || !sistemDeOperare.isEmpty() && !instance.getSistemDeOperare().equals(sistemDeOperare)
                        || !tipPlacaVideo.isEmpty() && !instance.getTipPlacaVideo().equals(tipPlacaVideo)
                        || !modelPlacaVideo.isEmpty() && !instance.getModelPlacaVideo().equals(modelPlacaVideo)
                        || !tipPorturi.isEmpty() && !instance.getTipPorturi().equals(tipPorturi)
                        || !nrPorturi.isEmpty() && instance.getNrPorturi() != Integer.parseInt(nrPorturi)
                        || !memorieRAM.isEmpty() && instance.getMemorieRam() != Integer.parseInt(memorieRAM)
                        || !greutate.isEmpty() && instance.getGreutate() != Float.parseFloat(greutate)) {
                        match = false;
                    }
                    
                    if (match) foundDevices.add(instance);
                }
            }

            if (foundDevices.isEmpty()) {
                if(!emptyTextFields) {
                    jTextArea1.setText("NU S-A GASIT NICIUN PRODUS");
                    dialog.dispose();
                }
            } else {
                for (Desktopuri desktop : foundDevices) {
                    resultBuilder.append(desktop).append("\n\n");
                }
                
                desktopFileActions.writeToFile("Assets/WriteDesktops", foundDevices);
                jTextArea1.setText(resultBuilder.toString());
                dialog.dispose();
            }
        });

        dialog.add(searchButton);
        dialog.setSize(600, 800);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void addLabelAndTextField(JPanel panel, String labelText, JTextField textField) {
        JLabel label = new JLabel(labelText);
        panel.add(label);
        panel.add(textField);
    }
    
    private void addLabelAndTextField(JDialog panel, String labelText, JTextField textField) {
        JLabel label = new JLabel(labelText);
        panel.add(label);
        panel.add(textField);
    }
    
    private void initializareComboBox() {
        String[] numeDesk = new String[desktopuri.length + 1];
        numeDesk[0] = "Alege Desktop";
        
        for(int i = 0; i < desktopuri.length; i++) {
            String marca = desktopuri[i].getMarca();
            String model = desktopuri[i].getModel();
            
            numeDesk[i + 1] = marca + " " + model;
        }
        
        jComboBox1.setModel(new DefaultComboBoxModel<>(numeDesk));
    }
    
    // Metoda pentru a adăuga ActionListener la combobox
    private void adaugaActionListenerComboBox() {
        jComboBox1.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
                int selectedIndex = jComboBox1.getSelectedIndex();
                
                if (selectedIndex >= 1 && selectedIndex - 1 < desktopuri.length) {
                    Object obiectSelectat = desktopuri[selectedIndex - 1];
                    String textAfisat = obiectSelectat.toString();
                    jTextArea1.setText(textAfisat);
                    jButton1.setVisible(true);
                } else {
                    jTextArea1.setText("");
                    jButton1.setVisible(false);
                }
            }
        });
    }
    
    private void updateTextAreaWithSelectedDesktop(Desktopuri selectedDesktop) {
        jTextArea1.setText(selectedDesktop.toString());
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new desktopint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button back;
    private javax.swing.JMenuItem home;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenu menu;
    private javax.swing.JLabel titlu;
    // End of variables declaration//GEN-END:variables
}
