/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfete;

import newpackage.InterfataGraficaMagazinElectronice;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import com.mycompany.magazinelectronice.*;
import java.awt.*;
import newpackage.*;

public class boxeint extends javax.swing.JFrame {
    Instances inst = new Instances();
    
    Device[] boxa = inst.getInstancesArray("boxe");
    BoxaPortabila[] boxe = (BoxaPortabila[]) boxa ;
   
    public boxeint() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
        initializareComboBox(); 
        adaugaActionListenerComboBox();    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new java.awt.Button();
        titlu = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        intclienti = new javax.swing.JMenu();
        home = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        back.setBackground(new java.awt.Color(255, 51, 51));
        back.setLabel("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        titlu.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        titlu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlu.setText("Boxe Portabile");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apasati pentru a vedea boxe" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Editeaza");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        intclienti.setText("Home");

        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        intclienti.add(home);

        jMenuBar1.add(intclienti);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titlu, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 300, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(titlu, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 450, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1))
                .addGap(74, 74, 74))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
       this.setVisible(false);
   
        InterfataGraficaMagazinElectronice home = new InterfataGraficaMagazinElectronice();
        home.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        this.setVisible(false);
   
        InterfataGraficaMagazinElectronice home = new InterfataGraficaMagazinElectronice();
        home.setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    int selectedIndex = jComboBox1.getSelectedIndex();
        
    if (selectedIndex >= 0) {
        JFrame popup = new JFrame("Detalii Boxa");
        popup.setSize(1000, 900);
        popup.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        BoxaPortabila selectedBoxa = boxe[selectedIndex];
     
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(0, 2)); // Layout pentru a afișa perechi etichetă-câmp text

     if (selectedIndex >= 0 && selectedIndex < boxe.length) {   
         JTextField textFieldMarca = new JTextField(selectedBoxa.getMarca());
         JTextField textFieldModel = new JTextField(selectedBoxa.getModel());
         JTextField textFieldCantitate = new JTextField(String.valueOf(selectedBoxa.getCantitate()));
         JTextField textFieldAnAparitie = new JTextField(String.valueOf(selectedBoxa.getAnAparitie()));
         JTextField textFieldPret = new JTextField(String.valueOf(selectedBoxa.getPret()));
         JTextField textFieldCuloare= new JTextField(selectedBoxa.getCuloare());
         JTextField textFieldTipConectivitate= new JTextField(selectedBoxa.getTipConectivitate());
         JTextField textFieldTipBaterie= new JTextField(selectedBoxa.getTipBaterie());
         JTextField textFieldVariantaBluetooth = new JTextField(String.valueOf(selectedBoxa.getVariantaBluetooth()));
         JTextField textFieldRaspunsInFrecventa = new JTextField(String.valueOf(selectedBoxa.getRaspunsInFrecventa()));
         JTextField textFieldImpedantaNominala = new JTextField(String.valueOf(selectedBoxa.getImpedantaNominala()));
         JTextField textFieldSpl = new JTextField(String.valueOf(selectedBoxa.getSpl()));
         JTextField textFieldCapacitateBaterie = new JTextField(String.valueOf(selectedBoxa.getCapacitateBaterie()));
         JTextField textFieldLatime = new JTextField(String.valueOf(selectedBoxa.getLatime()));
         JTextField textFieldLungime = new JTextField(String.valueOf(selectedBoxa.gatLungime()));
         JTextField textFieldAdancime = new JTextField(String.valueOf(selectedBoxa.getAdancime()));
         
         addLabelAndTextField(panel, "Marca:", textFieldMarca);
         addLabelAndTextField(panel, "Model:", textFieldModel);
         addLabelAndTextField(panel, "Cantitate:", textFieldCantitate);
         addLabelAndTextField(panel, "An aparitie:", textFieldAnAparitie);
         addLabelAndTextField(panel, "Pret:", textFieldPret);
         addLabelAndTextField(panel, "Tip conectivitate:", textFieldTipConectivitate);
         addLabelAndTextField(panel, "Culoare:", textFieldCuloare);
         addLabelAndTextField(panel, "Tip baterie:", textFieldTipBaterie);
         addLabelAndTextField(panel, "Varianta Bluetooth:", textFieldVariantaBluetooth);
         addLabelAndTextField(panel, "Raspuns in frecventa:", textFieldRaspunsInFrecventa);
         addLabelAndTextField(panel, "Impedanta nominala:", textFieldImpedantaNominala);
         addLabelAndTextField(panel, "Spl:", textFieldSpl);
         addLabelAndTextField(panel, "Capacitate baterie:", textFieldCapacitateBaterie);
         addLabelAndTextField(panel, "Latime:", textFieldLatime);
         addLabelAndTextField(panel, "Lungime:", textFieldLungime);
         addLabelAndTextField(panel, "Adancime", textFieldAdancime);
          
         JButton saveButton = new JButton("Salvează");
         saveButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
              String valoareMarca = textFieldMarca.getText();
              String valoareModel = textFieldModel.getText();
              int valoareCantitate =Integer.parseInt (textFieldCantitate.getText());
              int valoareAnAparitie = Integer.parseInt (textFieldAnAparitie.getText());
              float valoarePret = Float.parseFloat(textFieldPret.getText());
              String valoareCuloare = textFieldCuloare.getText();
              String valoareTipConectivitate = textFieldTipConectivitate.getText();
              String valoareTipBaterie = textFieldTipBaterie.getText();
              float valoareVariantaBluetooth = Float.parseFloat(textFieldVariantaBluetooth.getText());
              float valoareRaspunsInFrecventa = Float.parseFloat(textFieldRaspunsInFrecventa.getText());
              int valoareImpedantaNominala = Integer.parseInt (textFieldImpedantaNominala.getText());
              int valoareSpl = Integer.parseInt (textFieldSpl.getText());
              int valoareCapacitateBaterie = Integer.parseInt (textFieldCapacitateBaterie.getText());
              int valoareLungime = Integer.parseInt (textFieldLungime.getText());
              int valoareLatime = Integer.parseInt (textFieldLatime.getText());
              int valoareAdancime = Integer.parseInt (textFieldAdancime.getText());
              
              
              selectedBoxa.setMarca(valoareMarca);
              selectedBoxa.setModel(valoareModel);
              selectedBoxa.setCantitate(valoareCantitate);
              selectedBoxa.setAnAparitie(valoareAnAparitie);
              selectedBoxa.setPret(valoarePret);
              selectedBoxa.setCuloare(valoareCuloare);
              selectedBoxa.setTipConectivitate(valoareTipConectivitate);
              selectedBoxa.setTipBaterie(valoareTipBaterie);
              selectedBoxa.setVariantaBluetooth(valoareVariantaBluetooth);
              selectedBoxa.setRaspunsInFrecventa(valoareRaspunsInFrecventa);
              selectedBoxa.setImpedantaNominala(valoareImpedantaNominala);
              selectedBoxa.setSpl(valoareSpl);
              selectedBoxa.setCapacitateBaterie(valoareCapacitateBaterie);
              selectedBoxa.setLatime(valoareLatime);
              selectedBoxa.setLungime(valoareLungime);
              selectedBoxa.setAdancime(valoareAdancime); 
              boxe[selectedIndex].setMarca(selectedBoxa.getMarca());
              JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(saveButton);
              frame.dispose();
              updateTextAreaWithSelectedBoxa(selectedBoxa);
            }
         });
         
          panel.add(saveButton);    
     }
  
          popup.add(panel);
          popup.setVisible(true);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateTextAreaWithSelectedBoxa(BoxaPortabila selectedBoxa) {
        jTextArea1.setText(selectedBoxa.toString());
    }
                                      
      private void addLabelAndTextField(JPanel panel, String labelText, JTextField textField) {
        JLabel label = new JLabel(labelText);
        panel.add(label);
        panel.add(textField);
    }


 private void initializareComboBox() {
        String[] numeBoxa = new String[boxe.length];
        for(int i = 0; i < boxe.length; i++) {
            String marca = boxe[i].getMarca();
            String model = boxe[i].getModel();
            numeBoxa[i] = marca + " " + model;
        }
        jComboBox1.setModel(new DefaultComboBoxModel<>(numeBoxa));
        jTextArea1.setText(boxe[0].toString());
    }


// Metoda pentru a adăuga ActionListener la combobox
    private void adaugaActionListenerComboBox() {
        jComboBox1.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            int selectedIndex = jComboBox1.getSelectedIndex();
            if (selectedIndex >= 0) {
                Object obiectSelectat = boxe[selectedIndex];
                String textAfisat = obiectSelectat.toString();
                jTextArea1.setText(textAfisat);
                jButton1.setVisible(true);
            }
        }
    });
    }
 
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(boxeint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(boxeint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(boxeint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(boxeint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new boxeint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button back;
    private javax.swing.JMenuItem home;
    private javax.swing.JMenu intclienti;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel titlu;
    // End of variables declaration//GEN-END:variables
}
